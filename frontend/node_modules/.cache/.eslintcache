[{"/Users/info/Documents/ImageRecognition/frontend/src/index.js":"1","/Users/info/Documents/ImageRecognition/frontend/src/App.js":"2","/Users/info/Documents/ImageRecognition/frontend/src/components/header/Header.jsx":"3","/Users/info/Documents/ImageRecognition/frontend/src/pages/main/Main.jsx":"4","/Users/info/Documents/ImageRecognition/frontend/src/components/home/Home.jsx":"5"},{"size":241,"mtime":1678854576516,"results":"6","hashOfConfig":"7"},{"size":3030,"mtime":1678846434191,"results":"8","hashOfConfig":"7"},{"size":465,"mtime":1678857033350,"results":"9","hashOfConfig":"7"},{"size":232,"mtime":1678846329462,"results":"10","hashOfConfig":"7"},{"size":1554,"mtime":1678860055417,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"bnxd0i",{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"15"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},"/Users/info/Documents/ImageRecognition/frontend/src/index.js",[],[],[],"/Users/info/Documents/ImageRecognition/frontend/src/App.js",["30","31","32","33","34","35","36","37","38"],[],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\"\nimport {BrowserRouter as Router, Route, Routes, Navigate} from \"react-router-dom\";\nimport Main from \"./pages/main/Main\";\n\n//あああ\nfunction App() {\n const [categoryList, setCategoryList] = useState([]);\n const [name_id, setName_id] = useState(\"\");\n const [status_id, setStatus_id] = useState(\"\");\n const [update_status, setUpdate_status] = useState(\"\");\n const [update_id, setUpdate_id] = useState(\"\");\n const [id, setId] = useState(\"\");\n\nconst handleChangeName = (e) => {\n  setName_id(e.target.value);\n}\n\nconst handleChangeStatus = (e) => {\n  setStatus_id(e.target.value);\n}\n\nconst handleChangeUpdateStatus = (e) => {\n  setUpdate_status(e.target.value);\n}\n\nconst handleChangeUpdateid = (e) => {\n  setUpdate_id(e.target.value);\n}\n\nconst handleChangeId = (e) => {\n  setId(e.target.value);\n}\n\n\n useEffect(() => {\n   axios.get(\"http://localhost:3001/user\").then((response) => {\n     setCategoryList(response.data);\n   });\n }, [categoryList]);\n\n const handlecreate = () => {\n  try {\n    axios.post(`http://localhost:3001/user/create`, {name: name_id, status: status_id},)\n  }catch(err){\n    console.log(err);\n  }\n}\n\nconst handledelete = () => {//deleteだけaxiosの書き方が違う．\n  try {\n    const url = 'http://localhost:3001/user/delete'\n    const payload = {\n      id: id\n    }\n    axios.delete(url, {\n      data: payload\n    }) // 正常にAPIコールできる\n  } catch(e) {\n    console.error(e)\n  }\n}\n\nconst handleupdate = () => {\n  try {\n    axios.put(`http://localhost:3001/user/update`, {status: update_status, id : update_id},)\n  }catch(err){\n    console.log(err);\n  }\n}\n\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={ <Main/>}/>\n      </Routes>\n    </Router>\n    // <div className=\"App\">\n    //  <ul>\n    //    {categoryList.map((val, index) => {\n    //      return <li key={index}>id→{val.id} | name→{val.name} | status→{val.status}</li>\n    //    })}\n    //  </ul>\n    //  <form onSubmit={handlecreate}>\n    //  <input type = \"text\" onChange={handleChangeName} value={name_id} placeholder={\"作成したい名前を入れて\"}/>\n    //  <input type = \"text\" onChange={handleChangeStatus} value={status_id} placeholder={\"作成したい状態を入れて\"}/>\n    //  <input type=\"submit\" value=\"create\" />\n    //  </form>\n    //  <br/>\n    //  <form onSubmit={handleupdate}>\n    //  <input type = \"text\" onChange={handleChangeUpdateStatus} value={update_status} placeholder={\"更新したい状態を入れて\"}/>\n    //  <input type = \"number\" onChange={handleChangeUpdateid} value={update_id} placeholder={\"更新したいIDを入れて\"}/>\n    //  <input type=\"submit\" value=\"update\" />\n    //  </form>\n    //  <br/>\n    //  <form onSubmit={handledelete}>\n    //  <input type = \"number\" onChange={handleChangeId} value={id} placeholder={\"削除したいIDを入れて\"}/>\n    //  <input type=\"submit\" value=\"delete\" />\n    //  </form>\n    // </div>\n  );\n}\n\nexport default App;\n","/Users/info/Documents/ImageRecognition/frontend/src/components/header/Header.jsx",[],[],"/Users/info/Documents/ImageRecognition/frontend/src/pages/main/Main.jsx",[],[],"/Users/info/Documents/ImageRecognition/frontend/src/components/home/Home.jsx",["39"],[],"import React,{useState} from 'react'\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\nimport \"./Home.css\"\nimport SplitPane from 'react-split-pane';\n\nfunction Home() {\n  const [image, setImage] = useState('./default.png');\n  const onFileInputChange = (e) => {\n    if (!e.target.files) return;\n\n    // React.ChangeEvent<HTMLInputElement>よりファイルを取得\n    const fileObject = e.target.files[0];\n    // オブジェクトURLを生成し、useState()を更新\n    setImage(window.URL.createObjectURL(fileObject));\n  };\n\n  return (\n    <div className=\"homeContainer\">\n      <p> <strong>Select Image</strong></p>\n      <div className=\"uploadImage\">\n        <div className=\"cloudIcons\">\n          <CloudUploadIcon color=\"primary\" fontSize=\"large\"/>\n        </div>\n        <div className=\"imageContainer\">\n          <div className=\"imageText\">\n            <p>画像ファイルを選択してください</p>\n            <p>拡張子: png, jpeg</p>\n          </div>\n\n          <div className=\"imageButton\">\n            <input type=\"file\" accept=\"image/*\" onChange={onFileInputChange} />\n          </div>\n        </div>\n      </div>\n\n        <SplitPane split=\"vertical\" minSize={50} maxSize={50} defaultSize=\"50%\">\n          <div className=\"outputImage\">\n            <p> <strong>Input Image</strong></p>\n            <img src={image} />\n          </div>\n          <div className=\"outputPrice\">\n            <p style={{color:\"white\"}}> <strong>Price</strong></p>\n          </div>\n        </SplitPane>\n\n    </div>\n  )\n}\n\nexport default Home\n",{"ruleId":"40","severity":1,"message":"41","line":4,"column":49,"nodeType":"42","messageId":"43","endLine":4,"endColumn":57},{"ruleId":"40","severity":1,"message":"44","line":16,"column":7,"nodeType":"42","messageId":"43","endLine":16,"endColumn":23},{"ruleId":"40","severity":1,"message":"45","line":20,"column":7,"nodeType":"42","messageId":"43","endLine":20,"endColumn":25},{"ruleId":"40","severity":1,"message":"46","line":24,"column":7,"nodeType":"42","messageId":"43","endLine":24,"endColumn":31},{"ruleId":"40","severity":1,"message":"47","line":28,"column":7,"nodeType":"42","messageId":"43","endLine":28,"endColumn":27},{"ruleId":"40","severity":1,"message":"48","line":32,"column":7,"nodeType":"42","messageId":"43","endLine":32,"endColumn":21},{"ruleId":"40","severity":1,"message":"49","line":43,"column":8,"nodeType":"42","messageId":"43","endLine":43,"endColumn":20},{"ruleId":"40","severity":1,"message":"50","line":51,"column":7,"nodeType":"42","messageId":"43","endLine":51,"endColumn":19},{"ruleId":"40","severity":1,"message":"51","line":65,"column":7,"nodeType":"42","messageId":"43","endLine":65,"endColumn":19},{"ruleId":"52","severity":1,"message":"53","line":39,"column":13,"nodeType":"54","endLine":39,"endColumn":32},"no-unused-vars","'Navigate' is defined but never used.","Identifier","unusedVar","'handleChangeName' is assigned a value but never used.","'handleChangeStatus' is assigned a value but never used.","'handleChangeUpdateStatus' is assigned a value but never used.","'handleChangeUpdateid' is assigned a value but never used.","'handleChangeId' is assigned a value but never used.","'handlecreate' is assigned a value but never used.","'handledelete' is assigned a value but never used.","'handleupdate' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]